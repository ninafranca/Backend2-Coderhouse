<header class="logged-header">
    <a href="/user-info">Cuenta</a>
    <div class="dropdown">
        <a class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
            Productos
        </a>
        <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
            <li><a class="dropdown-item" href="/productos/mujer">Mujer</a></li>
            <li><a class="dropdown-item" href="/productos/hombre">Hombre</a></li>
            <li><a class="dropdown-item" href="/productos">Todos</a></li>
        </ul>
    </div>
    <a href="/carrito/{{user._id}}">Carrito</a>
    <a href="/chat">Chat</a>
    <form action="/logout" method="POST"><button type="submit" class="btn btn-secondary">Desloguearse</button></form>
</header>

<h1 class="products-h1">Carrito</h1>
{{#if products}}
<div class="products-list-cart card container">
    {{#each products}}
        <div class="cart-products" id="buy-form">
            {{!-- <div class="product-info-cart"> --}}
            <img src="{{this.thumbnail}}" alt="Product image" class="product-thumbnail">
            <h2 class="product-title">{{this.title}}</h2>
            <h2 class="product-brand">{{this.brand}}</h2>
            <h2 class="product-price-cart">${{this.price}}</h2>
            <div class="card-div">
                <div class="card-content">
                    <p class="card plus-minus" id="minus" onclick="deleteProduct(`{{../cart}}`, `{{this._id}}`)" style="background-color: rgb(216, 214, 214);">-</p>
                    <p id="counter-value"></p>
                    <p class="card plus-minus" id="plus" onclick="addProduct(`{{../cart}}`, `{{this._id}}`)" style="background-color: rgb(216, 214, 214);">+</p>
                </div>
            </div>
                <!--<h2 class="product-description">{{this.description}}</h2>-->
            {{!-- </div> --}}
            <button id="delete-prod-cart" onclick="deleteProduct(`{{../cart}}`, `{{this._id}}`)" class="btn btn-blue">Borrar</button>
        </div>
    {{/each}}
        <div>
            <h2 style="text-align: end; padding-right: 8%">Total: ${{total.price}}</h2>
        </div>
        <div class="pay-div" style="display: flex; justify-content: flex-end; padding: 2% 8% 0 0;">
            <button id="pay" type="submit" value="send" class="btn btn-success pay" data-bs-toggle="modal" data-bs-target="#staticBackdrop">Pagar</button>
            {{!-- Modal --}}
            <div class="modal fade" id="staticBackdrop" tabindex="-1" data-bs-backdrop="static" aria-labelledby="productModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="staticBackdropLabel">¡Su compra ha sido realizada con éxito!</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="newOrder(`{{cart}}`, `{{user._id}}`)">Close</button>
                    </div>
                    </div>
                </div>
            </div>
        </div>
{{else}}
    <h2 style="text-align: center; padding-top: 5%;">El carrito está vacío</h2>
{{/if}}
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
    let plus = document.getElementById("plus");
    let minus = document.getElementById("minus");
    let counter = document.getElementById("counter-value");

    function deleteProduct (cartId, prodId) {
        fetch(`http://localhost:8080/api/carrito/${cartId}/productos/${prodId}`, {
            method: "DELETE",
            headers: {"Content-type": "application/json"}
        })
        .then(result=> {
            return result.json()
        })
        .then(json=> {
            location.reload()
        })
        .catch(() => {
            return {status: "error", message: "Error al borrar el producto"}
        })
    }

    function addProduct (cartId, prodId) {
        fetch(`http://localhost:8080/api/carrito/${cartId}/productos/${prodId}`, {
            method: "POST",
            headers: {"Content-type": "application/json"}
        })
        .then(result=> {
            return result.json()
        })
        .then(json=> {
            location.reload()
        })
        .catch(() => {
            return {status: "error", message: "Error al agregar producto"}
        })
    }

    function deleteCart (cartId) {
        fetch(`http://localhost:8080/api/carrito/${cartId}`, {
            method: "DELETE",
            headers: {"Content-type": "application/json"}
        })
        .then(result=> {
            return result.json()
        })
        .then(json=> {
            location.reload()
        })
        .catch(() => {
            return {status: "error", message: "Error al borrar el producto"}
        })
    }

    function newOrder (cartId, userId) {
        fetch(`http://localhost:8080/orders/cart/${cartId}/user/${userId}`, {
            method: "POST",
            headers: {"Content-type": "application/json"}
        })
        .then(result=> {
            return result.json()
        })
        .then(json=> {
            location.reload()
        })
        .catch(() => {
            return {status: "error", message: "Error al crear órden"}
        })
    }

</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>